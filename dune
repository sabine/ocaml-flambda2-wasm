;**************************************************************************
;*                                                                        *
;*                                 OCaml                                  *
;*                                                                        *
;*                     Thomas Refis, Jane Street Europe                   *
;*                                                                        *
;*   Copyright 2018 Jane Street Group LLC                                 *
;*                                                                        *
;*   All rights reserved.  This file is distributed under the terms of    *
;*   the GNU Lesser General Public License version 2.1, with the          *
;*   special exception on linking described in the file LICENSE.          *
;*                                                                        *
;**************************************************************************



;; "perf" has warnings-as-errors + cross-module inlining
(env
 (perf
   (flags (
     -w +a-4-9-40-41-42-44-45-48 -strict-sequence
     -strict-formats -short-paths -keep-locs -warn-error +a
   )
 ))
 (dev     (flags (:standard -w +a-4-9-40-41-42-44-45-48)))
 (release (flags (:standard -w +a-4-9-40-41-42-44-45-48))))

;; Too annoying to get to work. Use (copy_files# ...) instead
; (include_subdirs unqualified)
; (ignored_subdirs (lex yacc testsuite ocamldoc ocamltest toplevel otherlibs))

(copy_files# utils/*.ml{,i})
(copy_files# parsing/*.ml{,i})
(copy_files# typing/*.ml{,i})
(copy_files# bytecomp/*.ml{,i})
(copy_files# driver/*.ml{,i})
(copy_files# asmcomp/*.ml{,i})
(copy_files# asmcomp/debug/*.ml{,i})
(copy_files# file_formats/*.ml{,i})
(copy_files# lambda/*.ml{,i})
(copy_files# middle_end/*.ml{,i})
(copy_files# middle_end/closure/*.ml{,i})

(library
 (name ocamlcommon)
 (wrapped false)
 (flags (:standard -principal -nostdlib))
 (libraries stdlib)
 (modules_without_implementation
   annot asttypes cmo_format outcometree parsetree targetint_intf)
 (modules
   ;; UTILS
   config build_path_prefix_map misc identifiable numbers arg_helper clflags
   profile terminfo ccomp warnings consistbl strongly_connected_components
   one_bit_fewer targetint load_path
   int_replace_polymorphic_compare printing_cache
   ; manual update: mli only files
   targetint_intf

   ;; PARSING
   location longident docstrings syntaxerr ast_helper camlinternalMenhirLib
   parser lexer parse printast pprintast ast_mapper ast_iterator attr_helper
   builtin_attributes ast_invariants depend
   ; manual update: mli only files
   asttypes parsetree

   ;; TYPING
   ident path primitive types btype oprint subst predef datarepr
   cmi_format persistent_env env type_immediacy
   typedtree printtyped ctype printtyp includeclass mtype envaux includecore
   tast_iterator tast_mapper cmt_format untypeast includemod
   typetexp printpat parmatch stypes typedecl typeopt rec_check typecore
   typeclass typemod typedecl_variance typedecl_properties typedecl_immediacy
   typedecl_unboxed
   ; manual update: mli only files
   annot outcometree

   ;; lambda/
   debuginfo lambda matching printlambda runtimedef simplif switch
   translattribute translclass translcore translmod translobj translprim tag
   dissect_letrec

   ;; bytecomp/
   meta opcodes bytesections dll symtable

   ;; some of COMP
   pparse main_args compenv compmisc makedepend compile_common
   ; manual update: mli only files
   cmo_format
   ; manual update: this is required.
   instruct
 ))

(library
 (name ocamlbytecomp)
 (wrapped false)
 (flags (:standard -principal -nostdlib))
 (libraries stdlib ocamlcommon)
 (modules
    ;; bytecomp/
    bytegen bytelibrarian bytelink bytepackager emitcode printinstr

    ;; driver/
    errors compile
 ))

(library
 (name ocamlmiddleend)
 (wrapped false)
 (flags (:standard -principal -nostdlib))
 (libraries stdlib ocamlcommon flambda2deps flambda2)
 (modules_without_implementation
   cmx_format cmxs_format backend_intf)
 (modules
   ;; file_formats/
   cmx_format cmxs_format

   ;; middle_end/
   backend_intf backend_var clambda clambda_primitives
   compilenv convert_primitives internal_variable_names
   printclambda printclambda_primitives semantics_of_primitives

   ;; middle_end/closure/
   closure closure_middle_end
 )
)

(library
 (name ocamloptcommon)
 (wrapped false)
 (flags (:standard -principal -nostdlib))
 (libraries stdlib ocamlcommon ocamlmiddleend)
 (modules_without_implementation x86_ast)
 (modules
   arch proc x86_ast x86_proc
   reg reg_availability_set reg_with_debug_info
   cmm cmmgen_state cmm_helpers printcmm
   mach printmach
   interval strmatch
  )
)

(library
 (name ocamloptcomp)
 (wrapped false)
 (flags (:standard -principal -nostdlib -open Flambda2 -open Flambda2_to_cmm))
 (libraries stdlib ocamlcommon ocamlmiddleend ocamloptcommon flambda2deps
            flambda2 flambda2_to_cmm flambda2_to_wasm)
 (modules
   ;; asmcomp/
   afl_instrument asmgen asmlibrarian asmlink asmpackager branch_relaxation
   branch_relaxation_intf cmmgen coloring comballoc
   CSE CSEgen deadcode domainstate emit emitaux interf linear linearize linscan
   liveness printlinear reload reloadgen schedgen
   scheduling selectgen selection spacetime_profiling spill split
   x86_dsl x86_gas x86_masm

   ;; asmcomp/debug/
   compute_ranges_intf available_regs compute_ranges

   ;; driver/
   optcompile opterrors
 )
)

;;;;;;;;;;;;;;
;;; ocamlc ;;;
;;;;;;;;;;;;;;

(executable
 (name main)
 (modes byte)
 (flags (:standard -principal -nostdlib -cclib "-I runtime"))
 (libraries ocamlbytecomp ocamlcommon runtime stdlib)
 (modules main))

(rule
 (copy main.exe ocamlc))

;;;;;;;;;;;;;;;;;;;;
;;; ilambda test ;;;
;;;;;;;;;;;;;;;;;;;;

(executable
 (name ilambdac)
 (modes byte)
 (flags (:standard -principal -nostdlib -cclib "-I runtime" -open Flambda2))
 (libraries ocamloptcommon ocamloptcomp ocamlmiddleend flambda2 ocamlcommon runtime stdlib)
 (modules ilambdac))

;;;;;;;;;;;;;;;;
;;; ocamlopt ;;;
;;;;;;;;;;;;;;;;

(executable
 (name optmain)
 ;;(link_flags (-cclib -lunwind))
 (modes native)
 (flags (:standard -principal -nostdlib -cclib "-I runtime"))
 (libraries ocamloptcomp ocamloptcommon ocamlmiddleend flambda2 ocamlcommon runtimeopt stdlib)
 (modules optmain))

(rule
 (copy optmain.exe ocamlopt.opt))

;;;;;;;;;;;;;;;
;;; aliases ;;;
;;;;;;;;;;;;;;;

; mshinwell: The debugger and ocamldoc are currently disabled as Dynlink is
; not built correctly.
(alias
 (name world)
 (deps ocamlc
       ocamlopt.opt
;       debugger/ocamldebug.byte
;       ocamldoc/ocamldoc.byte
;       ocamltest/ocamltest.byte
;       toplevel/ocaml.byte
;       toplevel/expunge.exe
       ))


(alias
  (name libs)
  (deps
    ocamloptcomp.cma
    ocamlmiddleend.cma
    ocamlcommon.cma
    runtime/runtime.cma
    stdlib/stdlib.cma
    ocamlbytecomp.cma
    ocamltest/ocamltest_core_and_plugin.cma
    toplevel/ocamltoplevel.cma
  ))

(install
 (section bin)
 (package ocaml)
 (files
  (ocamlc as ocamlc)
  (ocamlopt.opt as ocamlopt)))
